<?php/*** Lets a user attack, and handles the reaction to that.** Returns a json script, handled by the javascript on fight.php.*/define ('LOGIN', true);require_once ('../includes/notextinc.php');$Fight = $Character->getFightData();$Mob = $Fight->getMob();// we'll be setting messages, so set up a new order.$fight_message_order = 1;// the reponse will be stored in here, and then json'd and echoed later$r = array ();$r['fight_stage'] = null;// the character needs to be in a fight to be hereif ($Character->getMapData()->getDetail ('phase') != "fight") {	$r['status'] = "bad phase";} else {	$r['status'] = "success";	$r['char']['attack'] = $Fight->attack ();	if ($r['char']['attack']['hit']) {		$Message = FightMessage::addMessage (3, $Character->getId(), $Mob->getId(), $fight_message_order, array ($Mob->getId(), $r['char']['attack']['hit_amount']));		$r['message'][] = $Message->getMessageArray ();				// is the mob guy dead? don't bother giving him a turn if so		if ($Fight->getDetail ('mob_health') <= 0) {			$Message = FightMessage::addMessage (6, $Character->getId(), $Mob->getId(), $fight_message_order);			$r['message'][] = $Message->getMessageArray ();		}	} else {		$Message = FightMessage::addMessage (7, $Character->getId(), $Mob->getId(), $fight_message_order);		$r['message'][] = $Message->getMessageArray ();	}}if ($Fight->getDetail ('mob_health') > 0) include ('mob_action.php');echo json_encode ($r);?>